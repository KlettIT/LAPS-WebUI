
# This is a basic workflow to help you get started with Action
name: CI

on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 # Checking out the repo
      with:
        fetch-depth: 0
    - run: |
          git tag --list
          git describe --tags --abbrev=0

    - name: GHCR Build and push Docker image
      uses: pmorelli92/github-container-registry-build-push@1.0.2
      with:
        # Token that has `write:packages` scope to authenticate against GCHR.
        personal-access-token: ${{ secrets.GHCR_PAT }}
        # Docker Image name
        docker-image-name: LAPS-WebUI
        # Docker Image tag
        docker-image-tag: latest
        # Dockerfile path and name
        dockerfile-path: src/Dockerfile
        # Path to the build context
        build-context: ./src        
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          git tag --list
          git describe --tags --abbrev=0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="LAPS-WebUI-$tag-${{ matrix.target }}"
          # Build everything
          dotnet publish src/LAPS-WebUI.csproj --self-contained --framework net5.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"
          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
          tar czvf "${release_name}.tar.gz" "$release_name"
          fi
          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "LAPS-WebUI*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
